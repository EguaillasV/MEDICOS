# Generated by Django 5.0.7 on 2025-06-29 07:28

import applications.doctor.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Ejemplo: Cardiología, Pediatría, Ginecología', max_length=100, unique=True, verbose_name='Nombre de la Especialidad')),
                ('descripcion', models.TextField(blank=True, help_text='Breve explicación o enfoque de la especialidad (opcional).', null=True, verbose_name='Descripción')),
                ('activo', models.BooleanField(default=True, help_text='Marcar como inactivo para ocultar esta especialidad en el sistema.', verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Especialidad médica',
                'verbose_name_plural': 'Especialidades médicas',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=100, verbose_name='Nombres')),
                ('apellidos', models.CharField(max_length=100, verbose_name='Apellidos')),
                ('ruc', models.CharField(help_text='Ingrese un RUC válido (persona natural, sociedad o extranjero).', max_length=13, unique=True, validators=[applications.doctor.models.valida_ruc], verbose_name='Ruc')),
                ('fecha_nacimiento', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('direccion', models.CharField(help_text='Ubicación física donde atiende el doctor.', max_length=255, unique=True, verbose_name='Dirección de Trabajo')),
                ('latitud', models.DecimalField(blank=True, decimal_places=6, help_text='Coordenada GPS (opcional).', max_digits=18, null=True, verbose_name='Latitud')),
                ('longitud', models.DecimalField(blank=True, decimal_places=6, help_text='Coordenada GPS (opcional).', max_digits=18, null=True, verbose_name='Longitud')),
                ('codigo_unico_doctor', models.CharField(help_text='Identificador interno único para el doctor.', max_length=20, unique=True, verbose_name='Código Único del Doctor')),
                ('telefonos', models.CharField(help_text='Número de contacto. Puede ser celular o fijo.', max_length=20, verbose_name='Teléfonos')),
                ('email', models.EmailField(blank=True, help_text='Correo de contacto (opcional).', max_length=254, null=True, verbose_name='Correo Electrónico')),
                ('horario_atencion', models.TextField(help_text='Ejemplo: Lunes a Viernes, 08h00 - 13h00', verbose_name='Horario de Atención')),
                ('duracion_atencion', models.PositiveIntegerField(default=30, help_text='Tiempo estándar asignado a cada paciente.', verbose_name='Duración de Cita (minutos)')),
                ('curriculum', models.FileField(blank=True, help_text='Archivo PDF o DOC (opcional).', null=True, upload_to='core/curriculums/', verbose_name='Currículum Vitae')),
                ('firma_digital', models.ImageField(blank=True, help_text='Imagen que será usada para firmar digitalmente.', null=True, upload_to='core/firmas/', verbose_name='Firma Digital')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='applications/doctor/', verbose_name='Foto')),
                ('imagen_receta', models.ImageField(blank=True, help_text='Encabezado o firma que se mostrará en recetas médicas.', null=True, upload_to='core/recetas/', verbose_name='Imagen para Recetas')),
                ('activo', models.BooleanField(default=True, help_text='Si está desmarcado, el doctor no podrá ser asignado a consultas.', verbose_name='Activo')),
                ('especialidad', models.ManyToManyField(help_text='Seleccione una o más especialidades médicas.', related_name='especialidades', to='doctor.especialidad', verbose_name='Especialidades')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctores',
                'ordering': ['apellidos', 'nombres'],
            },
        ),
    ]
